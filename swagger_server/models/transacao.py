# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Transacao(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, tipo: str=None, valor: float=None, data: datetime=None, conta: Conta=None):  # noqa: E501
        """Transacao - a model defined in Swagger

        :param id: The id of this Transacao.  # noqa: E501
        :type id: int
        :param tipo: The tipo of this Transacao.  # noqa: E501
        :type tipo: str
        :param valor: The valor of this Transacao.  # noqa: E501
        :type valor: float
        :param data: The data of this Transacao.  # noqa: E501
        :type data: datetime
        :param conta: The conta of this Transacao.  # noqa: E501
        :type conta: Conta
        """
        self.swagger_types = {
            'id': int,
            'tipo': str,
            'valor': float,
            'data': datetime,
            'conta': Conta
        }

        self.attribute_map = {
            'id': 'id',
            'tipo': 'tipo',
            'valor': 'valor',
            'data': 'data',
            'conta': 'conta'
        }

        self._id = id
        self._tipo = tipo
        self._valor = valor
        self._data = data
        self._conta = conta

    @classmethod
    def from_dict(cls, dikt) -> 'Transacao':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Transacao of this Transacao.  # noqa: E501
        :rtype: Transacao
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Transacao.


        :return: The id of this Transacao.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Transacao.


        :param id: The id of this Transacao.
        :type id: int
        """

        self._id = id

    @property
    def tipo(self) -> str:
        """Gets the tipo of this Transacao.


        :return: The tipo of this Transacao.
        :rtype: str
        """
        return self._tipo

    @tipo.setter
    def tipo(self, tipo: str):
        """Sets the tipo of this Transacao.


        :param tipo: The tipo of this Transacao.
        :type tipo: str
        """
        allowed_values = ["debito", "deposito"]  # noqa: E501
        if tipo not in allowed_values:
            raise ValueError(
                "Invalid value for `tipo` ({0}), must be one of {1}"
                .format(tipo, allowed_values)
            )

        self._tipo = tipo

    @property
    def valor(self) -> float:
        """Gets the valor of this Transacao.


        :return: The valor of this Transacao.
        :rtype: float
        """
        return self._valor

    @valor.setter
    def valor(self, valor: float):
        """Sets the valor of this Transacao.


        :param valor: The valor of this Transacao.
        :type valor: float
        """

        self._valor = valor

    @property
    def data(self) -> datetime:
        """Gets the data of this Transacao.


        :return: The data of this Transacao.
        :rtype: datetime
        """
        return self._data

    @data.setter
    def data(self, data: datetime):
        """Sets the data of this Transacao.


        :param data: The data of this Transacao.
        :type data: datetime
        """

        self._data = data

    @property
    def conta(self) -> Conta:
        """Gets the conta of this Transacao.


        :return: The conta of this Transacao.
        :rtype: Conta
        """
        return self._conta

    @conta.setter
    def conta(self, conta: Conta):
        """Sets the conta of this Transacao.


        :param conta: The conta of this Transacao.
        :type conta: Conta
        """

        self._conta = conta
